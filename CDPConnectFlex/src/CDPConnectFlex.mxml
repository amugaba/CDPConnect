<?xml version="1.0" encoding="utf-8"?>
<!--
CDP Connect
DCI Upload System
Copyright (c) 2015 Angstrom Software

New York SBIRT Branch
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:custom="components.*"
			   xmlns:gpraservice="services.gpraservice.*"
			   xmlns:styles="com.adobe.fiber.styles.*"
			   xmlns:clientservice="services.clientservice.*"
			   xmlns:userservice="services.userservice.*"
			   xmlns:miscservice="services.miscservice.*"
			   width="750" height="800" minWidth="955" minHeight="620"
			   backgroundColor="#E2E2E8" currentState="Login"
			   pageTitle="CDP Connect" xmlns:pages="components.pages.*">
	<fx:Script>
		<![CDATA[
			import components.assessment.AssessType;
			import components.pages.InstrumentPage;
			
			import flash.globalization.DateTimeFormatter;
			import flash.globalization.LocaleID;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.buttonBarClasses.ButtonBarButton;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import valueObjects.AssessmentVO;
			import valueObjects.ClientVO;
			import valueObjects.GrantVO;
			import valueObjects.UserVO;			

			[Bindable] public var activeClient:ClientVO = null;
			[Bindable] public var activeUser:UserVO = null;
			[Bindable] public var activeGrant:GrantVO = null;
			[Bindable] public var activeAssessment:AssessmentVO = null;
			public var activeInstrument:InstrumentPage = null;
			public var intakeInterview:AssessmentVO;
			
			public var userList:ArrayList = new ArrayList();
			[Bindable] public var staffList:ArrayList = new ArrayList();
			[Bindable] public var facilityList:ArrayList = new ArrayList(); //maybe BIndable
			
			public var dateFormatter:DateTimeFormatter = new DateTimeFormatter(LocaleID.DEFAULT);
			public var adminMode:Boolean = false;
			private var creationComplete:Boolean = false;
			public static var DEBUG_MODE:int = 2;//0 = release, 1 = remote debug, 2 = local debug
			public static var ENDPOINT_RELEASE:String = "https://www.iprctech.org/cdpconnect/nydemo/gateway.php";
			public var preparationStepsLeft:int = 3;
			
			protected function loginCompleteHandler(event:FlexEvent):void
			{
				//Get staff list, facilities list, and grant details
				getUsers.token = userService.getUsers();
				getFacilities.token = miscService.getFacilities();
				getGrantResult.token = miscService.getGrant(activeUser.grantid);
				
				//Set up button bar
				reportsButton.visible = adminMode;
				pageHome.clientGroup.saveClientIDButton.visible = adminMode;
				pageHome.clientGroup.deleteButton.visible = adminMode;
				
				//Misc
				dateFormatter.setDateTimePattern("MM/dd/yyyy");
				creationComplete = true;
			}
			
			/*protected function pageViewstack_creationCompleteHandler(event:FlexEvent):void
			{
				//The first time login is done during the application, do setup after creation
				loginHelper();
			}*/
			
			protected function loginHelper():void
			{
				
			}
			
			protected function headerClientText(activeClient:ClientVO):String
			{
				var s:String = "";
				if(activeClient != null)
					s = activeClient.clientid;
				return s;
			}
			
			protected function getFacilities_resultHandler(event:ResultEvent):void
			{
				facilityList = new ArrayList();
				for each(var f:String in getFacilities.lastResult)
					facilityList.addItem(f);
				attemptHomePage();
			}
			
			protected function getUsers_resultHandler(event:ResultEvent):void
			{
				userList = new ArrayList();
				staffList = new ArrayList();
				//initialize BHS name and intials arrays
				for each(var user:UserVO in getUsers.lastResult)
				{
					userList.addItem(user.name);
					staffList.addItem(user.name);
				}
					
				attemptHomePage();				
			}
			
			protected function attemptHomePage():void
			{
				preparationStepsLeft--;
				if(preparationStepsLeft == 0)
				{
					pageHome.initializePage();
					pageViewstack.selectedChild = pageHome;
				}
			}

			protected function logoutButton_clickHandler(event:MouseEvent):void
			{
				activeUser = null;
				activeClient = null;
				activeAssessment = null;
				pageViewstack.selectedChild = pageHome;
				pageHome.resetPage();
				pageLogin.resetPage();
				currentState = "Login";
			}
			
			protected function getGrantResult_resultHandler(event:ResultEvent):void
			{
				activeGrant = getGrantResult.lastResult;
				pageAdmin.populateSettings();
				attemptHomePage();
			}
			
			protected function homeButton_clickHandler(event:MouseEvent):void
			{
				//if an interview is currently being shown, check if it was saved recently
				//prompt user to save progress or if they want to quit
				//also remove any visible error tips from current form
				if(activeInstrument != null && activeInstrument.viewStack.selectedIndex < activeInstrument.activeForms.length)
					activeInstrument.activeForms[activeInstrument.viewStack.selectedIndex].removeAllErrors();
				
				pageViewstack.selectedChild = pageHome;
				pageHome.resetSearch();
			}
			
			protected function reportsButton_clickHandler(event:MouseEvent):void
			{
				pageViewstack.selectedChild = pageAdmin;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="State1" enterState="loginCompleteHandler(event)"/>
		<s:State name="Login"/>
	</s:states>
	<fx:Declarations>
		<clientservice:ClientService id="clientService"
									 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									 showBusyCursor="true"/>
		<miscservice:MiscService id="miscService"
								 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								 showBusyCursor="true"/>
		<s:CallResponder id="getFacilities" result="getFacilities_resultHandler(event)"/>
		<s:CallResponder id="getUsers" result="getUsers_resultHandler(event)"/>
		<userservice:UserService id="userService"
								 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								 showBusyCursor="true"/>
		<s:CallResponder id="getGrantResult" result="getGrantResult_resultHandler(event)"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>
	<mx:ViewStack id="pageViewstack" x="0" y="100" width="100%" height="100%"  includeIn="State1"
				  backgroundColor="#E2E2E8" chromeColor="#6376A5" color="#000000"
				  contentBackgroundColor="#FFFFFF" creationPolicy="all">
		<pages:HomePage id="pageHome" width="100%" height="100%" label="Home" />
		<pages:GpraPage id="pageGPRA" width="100%" height="100%" label="GPRA"/>
		<pages:DciPage id="pageDCI" width="100%" height="100%" label="DCI"/>
		<pages:AdminPage id="pageAdmin" width="100%" height="100%" label="Admin"/>
		<!--<pages:ReportPage id="pageReport" width="100%" height="100%" label="Reports"/>-->
	</mx:ViewStack>
	<s:Image x="0" y="0" source="assets/ConnectBanner.png"/>
	<s:Group includeIn="State1" x="10" y="3" width="695" height="90" >
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<s:FormItem x="142" y="39" label="Active Client:" fontSize="14">
			<s:Label id="headerClientLabel" text="{headerClientText(activeClient)}"/>
		</s:FormItem>
		<s:Button id="logoutButton" x="609" y="16" height="43" label="Logout"
				  click="logoutButton_clickHandler(event)"/>
		<s:Button id="homeButton" x="443" y="16" height="43" label="Home" click="homeButton_clickHandler(event)"/>
		<s:Button id="reportsButton" x="528" y="16" height="43" label="Reports" click="reportsButton_clickHandler(event)"/>
		<s:Label x="197" y="12" fontSize="20" fontStyle="italic" fontWeight="normal"
				 text="New York SBIRT"/>
	</s:Group>
	
	<pages:LoginPage id="pageLogin" width="100%" height="100%" label="Login" includeIn="Login"/>
</s:Application>
