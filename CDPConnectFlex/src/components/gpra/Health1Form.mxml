<?xml version="1.0" encoding="utf-8"?>
<assessment:InterviewForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
			 labelWidth="280" xmlns:assessment="components.assessment.*">
	<fx:Script>
		<![CDATA[
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.questions.QuestionTextRefusable;
			import components.validators.Valid;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qHealthStatus:QuestionList = new QuestionList("HealthStatus","How would you rate your overall health right now?",new ArrayList(["Excellent","Very Good","Fair","Poor",REFUSED_VALUE,DONT_KNOW_VALUE]),0);
			public var qInpatientPhysical:QuestionList = new QuestionList("InpatientPhysical","Physical complaint",ynrd,1);
			public var qInpatientPhysicalNights:QuestionTextRefusable = new QuestionTextRefusable("InpatientPhysicalNights","");
			public var qInpatientMental:QuestionList = new QuestionList("InpatientMental","Mental or emotional difficulties",ynrd,1);
			public var qInpatientMentalNights:QuestionTextRefusable = new QuestionTextRefusable("InpatientMentalNights","");
			public var qInpatientAlcoholSA:QuestionList = new QuestionList("InpatientAlcoholSA","Alcohol or substance abuse",ynrd,1);
			public var qInpatientAlcoholSANights:QuestionTextRefusable = new QuestionTextRefusable("InpatientAlcoholSANights","");
			public var qOutpatientPhysical:QuestionList = new QuestionList("OutpatientPhysical","Physical complaint",ynrd,1);
			public var qOutpatientPhysicalTimes:QuestionTextRefusable = new QuestionTextRefusable("OutpatientPhysicalTimes","");
			public var qOutpatientMental:QuestionList = new QuestionList("OutpatientMental","Mental or emotional difficulties",ynrd,1);
			public var qOutpatientMentalTimes:QuestionTextRefusable = new QuestionTextRefusable("OutpatientMentalTimes","");
			public var qOutpatientAlcoholSA:QuestionList = new QuestionList("OutpatientAlcoholSA","Alcohol or substance abuse",ynrd,1);
			public var qOutpatientAlcoholSATimes:QuestionTextRefusable = new QuestionTextRefusable("OutpatientAlcoholSATimes","");
			public var qERPhysical:QuestionList = new QuestionList("ERPhysical","Physical complaint",ynrd,1);
			public var qERPhysicalTimes:QuestionTextRefusable = new QuestionTextRefusable("ERPhysicalTimes","");
			public var qERMental:QuestionList = new QuestionList("ERMental","Mental or emotional difficulties",ynrd,1);
			public var qERMentalTimes:QuestionTextRefusable = new QuestionTextRefusable("ERMentalTimes","");
			public var qERAlcoholSA:QuestionList = new QuestionList("ERAlcoholSA","Alcohol or substance abuse",ynrd,1);
			public var qERAlcoholSATimes:QuestionTextRefusable = new QuestionTextRefusable("ERAlcoholSATimes","");
			
			//Health1 Form Area
			public override function createForm():void
			{
				//Questions
				addQuestion(qHealthStatus);
				createText("During the past 30 days, did you receive:","h1");
				createText("Inpatient Treatment for _____. [IF YES] For how many nights?","h1");
				addTreatmentQuestion(qInpatientPhysical,qInpatientPhysicalNights,30);
				addTreatmentQuestion(qInpatientMental,qInpatientMentalNights,30);
				addTreatmentQuestion(qInpatientAlcoholSA,qInpatientAlcoholSANights,30);
				createText("Outpatient Treatment for _____. [IF YES] For how many times?","h1");
				addTreatmentQuestion(qOutpatientPhysical,qOutpatientPhysicalTimes,99);
				addTreatmentQuestion(qOutpatientMental,qOutpatientMentalTimes,99);
				addTreatmentQuestion(qOutpatientAlcoholSA,qOutpatientAlcoholSATimes,99);
				createText("Emergency Room Treatment for _____. [IF YES] For how many times?","h1");
				addTreatmentQuestion(qERPhysical,qERPhysicalTimes,99);
				addTreatmentQuestion(qERMental,qERMentalTimes,99);
				addTreatmentQuestion(qERAlcoholSA,qERAlcoholSATimes,99);
				
				//Validators
				
				//Control Logic
				
			}
			protected function addTreatmentQuestion(treatmentQ:QuestionList, daysQ:QuestionTextRefusable, maxValue:int):void
			{
				addQuestion(treatmentQ);
				treatmentQ.inputControl.width = 90;
				treatmentQ.direction = "horizontal";
				
				questions.push(daysQ);
				treatmentQ.addElement(daysQ.input);
				treatmentQ.addElement(daysQ.refuseInput);
				daysQ.inline = true;
				
				Valid.addNumberValidator(daysQ,1,maxValue,true);
				addSkipDropDown(treatmentQ,["Yes"],[daysQ],true);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</assessment:InterviewForm>
