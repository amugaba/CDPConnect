<?xml version="1.0" encoding="utf-8"?>
<assessment:InterviewForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:assessment="components.assessment.*">
	<fx:Script>
		<![CDATA[
			import components.assessment.InterviewType;
			import components.questions.QuestionClass;
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.validators.DateAgeValidator;
			import components.validators.Valid;
			
			import flash.globalization.DateTimeFormatter;
			import flash.globalization.LocaleID;
			
			import mx.collections.ArrayList;
			
			public var qClientID:QuestionText = new QuestionText("ClientID","Client ID","",false);
			public var qClientType:QuestionList = new QuestionList("ClientType","Client Type",new ArrayList(["Treatment Client","Client in Recovery"]),0);
			public var qInterviewTypeCode:QuestionList = new QuestionList("InterviewTypeCode","Interview Type",new ArrayList(["Intake","6 Month Followup","12 Month Followup","3 Month Followup","Discharge"]),0);
			public var qConductedInterview:QuestionList = new QuestionList("ConductedInterview","Did you conduct a followup/discharge interview?",yn,0);
			public var qInterviewDate:QuestionText = new QuestionText("InterviewDate","Interview Date");
			public var qCooccurringScreen:QuestionList = new QuestionList("CooccurringScreen","Was the client screened by your program for co-occurring mental health and substance use disorders?",yn,1);
			public var qCooccurringScreenStatus:QuestionList = new QuestionList("CooccurringScreenStatus","Did the client screen positive for co-occurring mental health and substance use disorders?",yn,1);
			public var qFollowupSelected:QuestionList = new QuestionList("followupSelected","Was the client selected for follow-up, and did the client agree to follow-up?",yn,1);
			
			//Record Form Area
			public override function createForm():void
			{
				//Questions
				addQuestion(qClientID);
				qClientID.answerType = String;
				addQuestion(qClientType, 150);
				addQuestion(qInterviewTypeCode, 150);
				addQuestion(qConductedInterview);
				addQuestion(qInterviewDate);
				qInterviewDate.defaultValue = global.dateFormatter.format(new Date());
				qInterviewDate.answer = qInterviewDate.defaultValue;
				addQuestion(qCooccurringScreen);
				addQuestion(qCooccurringScreenStatus);
				addQuestion(qFollowupSelected);
				
				//Validators
				Valid.addDateAgeValidator(qInterviewDate,0,DateAgeValidator.DAY,5,DateAgeValidator.YEAR);
				qInterviewDate.answerType = String;
				
				//Control Logic
				addSkipDropDown(qInterviewTypeCode,["Intake"],[qConductedInterview]);
				addSkipDropDown(qConductedInterview,[NO_VALUE],[qInterviewDate]);
				addSkipDropDown(qCooccurringScreen,[NO_VALUE],[qCooccurringScreenStatus]);
				
				//Prepopulate
				populateForm();
			}
			
			public override function resetForm():void
			{
				super.resetForm();
				populateForm();
			}
			
			
			public override function clearQuestionAnswers():void
			{
				qFollowupSelected.setAnswerIndex(-1);
			}
			
			public function populateForm():void
			{
				qClientID.answer = String(global.activeClient.clientid);
				
				if(InterviewType.isIntake(global.pageGPRA.interviewType))
				{
					qInterviewTypeCode.answer = "Intake";
					if(questions.indexOf(qFollowupSelected) == -1) //followup Q is only shown in Intake
						addQuestion(qFollowupSelected);
				}
				else
				{
					if(questions.indexOf(qFollowupSelected) != -1)
						removeQuestion(qFollowupSelected);
					
					if(InterviewType.isFollowup(global.pageGPRA.interviewType))
					{
						qInterviewTypeCode.answer = "6 Month Followup";
					}
					else if(InterviewType.DISCHARGE_BI == global.pageGPRA.interviewType || InterviewType.DISCHARGE_RT == global.pageGPRA.interviewType)
					{
						qInterviewTypeCode.answer = "Discharge";
						qConductedInterview.answer = "Yes";
					}
					else if(InterviewType.DISCHARGE_ADMIN== global.pageGPRA.interviewType)
					{
						qInterviewTypeCode.answer = "Discharge";
						qConductedInterview.answer = "No";
					}
				}
				
				qInterviewTypeCode.refreshSkips();
				qConductedInterview.refreshSkips();
				qInterviewDate.enabled = true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</assessment:InterviewForm>
