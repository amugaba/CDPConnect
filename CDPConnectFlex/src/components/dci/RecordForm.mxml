<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import components.DateAgeValidator;
			import components.QuestionClass;
			import components.QuestionList;
			import components.QuestionText;
			
			import mx.collections.ArrayList;
			import flash.globalization.DateTimeFormatter;
			import flash.globalization.LocaleID;
			
			public var qClientID:QuestionText = new QuestionText("ClientID","Client ID","",false);
			public var qInterviewTypeCode:QuestionList = new QuestionList("InterviewTypeCode","Interview Type",new ArrayList(["Intake","6 Month Followup","12 Month Followup","3 Month Followup","Discharge", "Discharge: Administrative"]),0,false);
			public var qConductedInterview:QuestionList = new QuestionList("ConductedInterview","Did you conduct a followup/discharge interview?",yn,0);
			public var qInterviewDate:QuestionText = new QuestionText("InterviewDate","Interview Date","");
			public var qCooccurringScreen:QuestionList = new QuestionList("CooccurringScreen","Was the client screened by your program for co-occurring mental health and substance use disorders?",new ArrayList(["Yes","No","Missing Data"]),0);
			public var qCooccurringScreenStatus:QuestionList = new QuestionList("CooccurringScreenStatus","Did the client screen positive for co-occurring mental health and substance use disorders?",new ArrayList(["Yes","No","Missing Data"]),1);

			protected var dateFormatter:DateTimeFormatter = new DateTimeFormatter(LocaleID.DEFAULT);
			
			//Record Form Area
			public override function createForm():void
			{
				//Questions
				addQuestion(qClientID);
				addQuestion(qInterviewTypeCode, 150);
				addQuestion(qConductedInterview);
				addQuestion(qInterviewDate);
				addQuestion(qCooccurringScreen);
				addQuestion(qCooccurringScreenStatus);
				
				//Validators
				addDateAgeValidator(qInterviewDate,0,DateAgeValidator.DAY,365,DateAgeValidator.DAY);
				
				//Control Logic
				//addSkipDropDown("InterviewTypeCode",["Intake"],["ConductedInterview"]);
				addSkipDropDown(qConductedInterview,["No"],[qInterviewDate]);
				addSkipDropDown(qCooccurringScreen,["No","Missing Data"],[qCooccurringScreenStatus]);
				
				//Prepopulate
				dateFormatter.setDateTimePattern("MM/dd/yyyy");
				populateForm();
			}
			
			public override function reset():void
			{
				populateForm();
			}
			
			private function populateForm():void
			{
				qClientID.answer = String(global.activeClient.autoid);
				qInterviewTypeCode.input.selectedIndex = global.activeGPRA.type-1;
				qInterviewDate.answer = dateFormatter.format(new Date());
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
