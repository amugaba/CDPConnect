<?xml version="1.0" encoding="utf-8"?>
<assessment:InterviewForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%"
			 labelWidth="270" xmlns:assessment="components.assessment.*">
	<fx:Script>
		<![CDATA[
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.questions.QuestionTextRefusable;
			import components.validators.Valid;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			import spark.components.Group;
			
			public var qLivingWhere:QuestionList = new QuestionList("LivingWhere","Where have you been living most of the time?",new ArrayList(["House rented by client","House owned by client","Place not meant for habitation (e.g. a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside)",
				"Emergency shelter, including hotel or motel","Staying or living with family/friends (e.g. room, apartment or house)","Transition housing","Substance abuse treatment facility or detox center","Residential treatment (substance abuse or mental health)","Therapeutic community or halfway house",
				"Psychiatric hospital or other psychiatric facility","Long-term care facility or nursing home","Hospital or other residential non-psychiatric medical facility","Permanent supportive housing","Foster care home or foster care group home","Jail, prison, or juvenille detention facility","Other",REFUSED_VALUE,DONT_KNOW_VALUE]),0);
			public var qLivingOtherSpec:QuestionText = new QuestionText("LivingOtherSpec","Other (specify)","");
			public var qHomelessNights:QuestionTextRefusable = new QuestionTextRefusable("HomelessNights","How many nights have you been homeless?","0");
			public var qImpactStress:QuestionList = new QuestionList("ImpactStress","How stressful have things been for you because of your use of alcohol or other drugs?",new ArrayList(["Not at all","Somewhat","Considerably","Extremely",REFUSED_VALUE,DONT_KNOW_VALUE]),0);
			public var qImpactActivity:QuestionList = new QuestionList("ImpactActivity","Has your use of alcohol or other drugs caused you to reduce or give up important activities?",new ArrayList(["Not at all","Somewhat","Considerably","Extremely",REFUSED_VALUE,DONT_KNOW_VALUE]),0);
			public var qImpactEmotional:QuestionList = new QuestionList("ImpactEmotional","Has your use of alcohol and other drugs caused you to have emotional problems?",new ArrayList(["Not at all","Somewhat","Considerably","Extremely",REFUSED_VALUE,DONT_KNOW_VALUE]),0);
			public var qPregnant:QuestionList = new QuestionList("Pregnant","Are you currently pregnant?",ynrd,1);
			public var qChildren:QuestionList = new QuestionList("Children","Do you have children?",ynrd,1);
			public var qChildrenNr:QuestionTextRefusable = new QuestionTextRefusable("ChildrenNr","How many children do you have?","1");
			public var qChildrenCustodyNr:QuestionTextRefusable = new QuestionTextRefusable("ChildrenCustodyNr","How many of your children are living with someone else due to a child protection court order?","0");
			public var qChildrenCustodyLost:QuestionTextRefusable = new QuestionTextRefusable("ChildrenCustodyLost","For how many of your children have you parental lost rights?","0");
			
			//Living Form Area
			public override function createForm():void
			{
				//Questions
				createText("In the the past 30 days...","h1");
				addQuestion(qLivingWhere,400);

				//put the living input on a new line since it's long
				var g:Group = new Group();
				g.setStyle("paddingTop",-5);
				g.addElement(qLivingWhere.input);
				qLivingWhere.input.x = 180;
				addElement(g);

				addQuestion(qLivingOtherSpec);
				qLivingOtherSpec.answerType = String;
				addQuestion(qHomelessNights);
				addQuestion(qImpactStress);
				addQuestion(qImpactActivity);
				addQuestion(qImpactEmotional);
				addDivider();
				addQuestion(qPregnant);
				addQuestion(qChildren);
				addQuestion(qChildrenNr);
				addQuestion(qChildrenCustodyNr);
				addQuestion(qChildrenCustodyLost);
				
				//Validators
				Valid.addRequiredValidator(qLivingOtherSpec);
				Valid.addNumberValidator(qHomelessNights,0,30,true);
				Valid.addNumberValidator(qChildrenNr,1,99,true);
				Valid.addNumberValidator(qChildrenCustodyNr,0,1,true);
				Valid.addNumberValidator(qChildrenCustodyLost,0,1,true);
				BindingUtils.bindSetter(function():void{
					(qChildrenCustodyNr.validators[0] as NumberValidator).maxValue = Number(qChildrenNr.answer);
					(qChildrenCustodyLost.validators[0] as NumberValidator).maxValue = Number(qChildrenNr.answer);
					qChildrenCustodyNr.validator.validate();
					qChildrenCustodyLost.validator.validate();
				}, qChildrenNr.inputControl, "text");
				qLivingOtherSpec.answerType = String;
				
				//Control Logic
				addSkipDropDown(qLivingWhere,["Other"],[qLivingOtherSpec],true);
				addSkipDropDown(qChildren,["Yes"],[qChildrenNr,qChildrenCustodyNr,qChildrenCustodyLost],true);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</assessment:InterviewForm>
