<?xml version="1.0" encoding="utf-8"?>
<assessment:InterviewForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%"
			 labelWidth="280" xmlns:assessment="components.assessment.*">
	<fx:Script>
		<![CDATA[
			import components.assessment.InterviewType;
			import components.assessment.InterviewType;
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.questions.QuestionTextRefusable;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qSuicideAttempted:QuestionList = new QuestionList("SuicideAttempted","Have you ever tried to kill yourself?",ynrd,1);
			public var qSuicideConsidered:QuestionList = new QuestionList("SuicideConsidered","At any time in the past 6 months (including today), did you seriously think about trying to kill yourself?",ynrd,1);
			public var qSuicideAttemptRecent:QuestionList = new QuestionList("SuicideAttemptRecent","During the past 6 months (including today), did you try to kill yourself?",ynrd,1);
			private var responses:ArrayList = new ArrayList(["All of the time","Most of the time","Some of the time","A little of the time","None of the time",REFUSED_VALUE, DONT_KNOW_VALUE]);
			public var qNervous:QuestionList = new QuestionList("Nervous","Nervous",responses,0);
			public var qHopeless:QuestionList = new QuestionList("Hopeless","Hopeless",responses,0);
			public var qRestless:QuestionList = new QuestionList("Restless","Restless of fidgety",responses,0);
			public var qDepressed:QuestionList = new QuestionList("Depressed","So depressed that nothing could cheer you up",responses,0);
			public var qEverythingEffort:QuestionList = new QuestionList("EverythingEffort","That everything was an effort",responses,0);
			public var qWorthless:QuestionList = new QuestionList("Worthless","Worthless",responses,0);
			public var qBothered:QuestionList = new QuestionList("Bothered","Bothered by the above psychological or emotional problems",responses,0);
			
			public override function createForm():void
			{
				addQuestion(qSuicideAttempted);
				addQuestion(qSuicideConsidered);
				addQuestion(qSuicideAttemptRecent);
				createText("During the past 30 days, about how how often did you feel...","h1");
				var width:int = 140;
				addQuestion(qNervous,width);
				addQuestion(qHopeless,width);
				addQuestion(qRestless,width);
				addQuestion(qDepressed,width);
				addQuestion(qEverythingEffort,width);
				addQuestion(qWorthless,width);
				addQuestion(qBothered,width);
			}
			
			//Certain questions are only visible during intake or reassessment
			public override function initForm():void
			{
				super.initForm();
				
				//If the interview is Intake, and the last form loaded was not Intake
				if(InterviewType.isIntake(global.pageDCI.interviewType))
				{
					if(questions.indexOf(qSuicideAttempted) == -1)
					{
						addQuestion(qSuicideAttempted);
						addElementAt(qSuicideAttempted,0);
					}
					if(questions.indexOf(qSuicideConsidered) != -1)
					{
						removeQuestion(qSuicideConsidered);
						removeQuestion(qSuicideAttemptRecent);
					}
				}
				//If the interview is not Intake, and the last form was Intake
				else if(!InterviewType.isIntake(global.pageDCI.interviewType))
				{
					if(questions.indexOf(qSuicideAttempted) != -1)
					{
						removeQuestion(qSuicideAttempted);
					}
					if(questions.indexOf(qSuicideConsidered) == -1)
					{
						addQuestion(qSuicideConsidered);
						addQuestion(qSuicideAttemptRecent);
						addElementAt(qSuicideConsidered,0);
						addElementAt(qSuicideAttemptRecent,1);
					}
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</assessment:InterviewForm>
