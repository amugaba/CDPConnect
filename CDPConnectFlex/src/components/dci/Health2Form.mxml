<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import components.QuestionList;
			import components.QuestionText;
			import components.QuestionTextRefusable;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qSexActivity:QuestionList = new QuestionList("SexActivity","During the past 30 days, did you engage in sexual activity?",new ArrayList(["Yes","No","Not permitted to ask","Refused","Don't Know","Missing Data"]),1);
			public var qSexContacts:QuestionTextRefusable = new QuestionTextRefusable("SexContacts","Sexual contacts (vaginal, oral, or anal) did you have?","0");
			public var qSexUnprot:QuestionTextRefusable = new QuestionTextRefusable("SexUnprot","Unprotected sexual contacts did you have?","0");
			public var qSexUnprotHIVAids:QuestionTextRefusable = new QuestionTextRefusable("SexUnprotHIVAids","HIV positive or has AIDS","0");
			public var qSexUnprotInjDrugUser:QuestionTextRefusable = new QuestionTextRefusable("SexUnprotInjDrugUser","An injection drug user","0");
			public var qSexUnprotHigh:QuestionTextRefusable = new QuestionTextRefusable("SexUnprotHigh","High on some substance","0");
			public var qfHIVTest:QuestionList = new QuestionList("fHIVTest","Have you ever been tested for HIV?",ynrdm,1);
			public var qfHIVTestResult:QuestionList = new QuestionList("fHIVTestResult","Do you know the results of your HIV testing?",ynrm,1);
			
			//Health2 Form Area
			public override function createForm():void
			{
				//Questions
				addQuestion(qSexActivity,125);
				createText("[IF YES] Altogether, how many:","h1");
				addQuestion(qSexContacts);
				addQuestion(qSexUnprot);
				createText("How many unprotected sexual contacts were with an individual who is or was:","h1");
				addQuestion(qSexUnprotHIVAids);
				addQuestion(qSexUnprotInjDrugUser);
				addQuestion(qSexUnprotHigh);
				addQuestion(qfHIVTest);
				addQuestion(qfHIVTestResult);
				
				//Validators
				addNumberValidator(qSexContacts,1,999,true);
				addNumberValidator(qSexUnprot,0,999,true);
				addNumberValidator(qSexUnprotHIVAids,0,999,true);
				addNumberValidator(qSexUnprotInjDrugUser,0,999,true);
				addNumberValidator(qSexUnprotHigh,0,999,true);
				BindingUtils.bindSetter(function():void{(qSexUnprotHIVAids.validator as NumberValidator).maxValue = Number(qSexUnprot.answer)}, qSexUnprot.inputControl, "text");
				BindingUtils.bindSetter(function():void{(qSexUnprotInjDrugUser.validator as NumberValidator).maxValue = Number(qSexUnprot.answer)}, qSexUnprot.inputControl, "text");
				BindingUtils.bindSetter(function():void{(qSexUnprotHigh.validator as NumberValidator).maxValue = Number(qSexUnprot.answer)}, qSexUnprot.inputControl, "text");
				
				//Control Logic
				addSkipDropDown(qSexActivity,["No","Not permitted to ask","Refused","Don't Know","Missing Data"],[qSexContacts,qSexUnprot]);
				addSkipTextNumber(qSexUnprot,[qSexUnprotHIVAids,qSexUnprotInjDrugUser,qSexUnprotHigh],["0"]);
				addSkipDropDown(qfHIVTest,["No","Refused","Don't Know","Missing Data"],[qfHIVTestResult]);
				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
