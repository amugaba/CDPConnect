<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%"
			 labelWidth="305">
	<fx:Script>
		<![CDATA[
			import components.DropDownValidator;
			import components.QuestionList;
			import components.QuestionText;
			import components.QuestionTextRefusable;
			import components.SkipPattern;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qStaffContact:QuestionList = new QuestionList("StaffContact","Have you or other grant staff had contact with the client within 90 days of the last encounter?",new ArrayList(["Yes","No"]),1);
			public var qReceivingServices:QuestionList = new QuestionList("ReceivingServices","Is the client still receiving services from your program?",yn,1);
			
			private var testResponses:ArrayList = new ArrayList(["Negative/Non-reactive","Positive/reactive","Invalid/Indeterminate"]);
			public var qfHIVTest:QuestionList = new QuestionList("fHIVTest","Did the program test this client for HIV?",yn,1);
			public var qfHIVTestResult:QuestionList = new QuestionList("fHIVTestResult","What was the result?",testResponses,0);
			public var qfHIVTestRefer:QuestionList = new QuestionList("fHIVTestRefer","If the client was not tested for HIV, did the program refer this client for testing?",new ArrayList(["Yes","No","Client declined testing"]),1);
			public var qfHepTest:QuestionList = new QuestionList("fHepTest","Did the program test the client for Viral Hepatitis?",yn,1);
			public var qfHepBTestReceived:QuestionList = new QuestionList("fHepBTestReceived","Did the client receive the test results for Hepatitis B?",yn,1);
			public var qfHepBTestResult:QuestionList = new QuestionList("fHepBTestResult","What was the result?",testResponses,0);
			public var qfHepCTestReceived:QuestionList = new QuestionList("fHepCTestReceived","Did the client receive the test results for Hepatitis C?",yn,1);
			public var qfHepCTestResult:QuestionList = new QuestionList("fHepCTestResult","What was the result?",testResponses,0);
			public var qfHepTestConfirm:QuestionList = new QuestionList("fHepTestConfirm","Did the program conduct a Confirmatory Hepatitis Test?",yn,1);
			public var qfHepBConfirmReceived:QuestionList = new QuestionList("fHepBConfirmReceived","Did the client receive the confirmatory test results for Hepatitis B?",yn,1);
			public var qfHepBConfirmResult:QuestionList = new QuestionList("fHepBConfirmResult","What was the result?",testResponses,0);
			public var qfHepCConfirmReceived:QuestionList = new QuestionList("fHepCConfirmReceived","Did the client receive the confirmatory test results for Hepatitis C?",yn,1);
			public var qfHepCConfirmResult:QuestionList = new QuestionList("fHepCConfirmResult","What was the result?",testResponses,0);
			
			//Followup Form Area
			public override function createForm():void
			{
				//Questions
				createText("Over the past 30 days...","h1");
				addQuestion(qStaffContact);
				addQuestion(qReceivingServices);
				addDivider();
				var resultWidth:int = 160;
				addQuestion(qfHIVTest);
				addQuestion(qfHIVTestResult,resultWidth);
				addQuestion(qfHIVTestRefer,resultWidth);
				addDivider();
				addQuestion(qfHepTest);
				addQuestion(qfHepBTestReceived);
				addQuestion(qfHepBTestResult,resultWidth);
				addQuestion(qfHepCTestReceived);
				addQuestion(qfHepCTestResult,resultWidth);
				addDivider();
				addQuestion(qfHepTestConfirm);
				addQuestion(qfHepBConfirmReceived);
				addQuestion(qfHepBConfirmResult,resultWidth);
				addQuestion(qfHepCConfirmReceived);
				addQuestion(qfHepCConfirmResult,resultWidth);
				
				//Validators

				//Control Logic
				addSkipDropDown(qfHIVTest,["No"],[qfHIVTestResult]);
				addSkipDropDown(qfHIVTest,["Yes"],[qfHIVTestRefer]);
				addSkipDropDown(qfHepTest,["No"],[qfHepBTestReceived,qfHepCTestReceived,qfHepTestConfirm]);
				addSkipDropDown(qfHepBTestReceived,["No"],[qfHepBTestResult]);
				addSkipDropDown(qfHepCTestReceived,["No"],[qfHepCTestResult]);
				addSkipDropDown(qfHepTestConfirm,["No"],[qfHepBConfirmReceived,qfHepCConfirmReceived]);
				addSkipDropDown(qfHepBConfirmReceived,["No"],[qfHepBConfirmResult]);
				addSkipDropDown(qfHepCConfirmReceived,["No"],[qfHepCConfirmResult]);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
