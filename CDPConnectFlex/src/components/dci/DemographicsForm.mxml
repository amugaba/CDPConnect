<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%"
			 labelWidth="148">
	<fx:Script>
		<![CDATA[
			import components.questions.QuestionClass;
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.skips.SkipPattern;
			import components.validators.DateAgeValidator;
			import components.validators.DropDownValidator;
			import components.validators.Valid;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			
			import spark.components.TileGroup;
			
			public var qBirthMonth:QuestionText = new QuestionText("BirthMonth","Month:","");
			public var qBirthYear:QuestionText = new QuestionText("BirthYear","Year:","");
			public var qHispanicLatino:QuestionList = new QuestionList("HispanicLatino","Are you Hispanic, Latino/a, or Spanish origin?",ynr,1);
			public var qEthnicCentralAmerican:QuestionList = new QuestionList("EthnicCentralAmerican","Central American",ynr,1);
			public var qEthnicCuban:QuestionList = new QuestionList("EthnicCuban","Cuban",ynr,1);
			public var qEthnicDominican:QuestionList = new QuestionList("EthnicDominican","Dominican",ynr,1);
			public var qEthnicMexican:QuestionList = new QuestionList("EthnicMexican","Mexican, Chicano/a",ynr,1);
			public var qEthnicPuertoRican:QuestionList = new QuestionList("EthnicPuertoRican","Puerto Rican",ynr,1);
			public var qEthnicSouthAmerican:QuestionList = new QuestionList("EthnicSouthAmerican","South American",ynr,1);
			public var qEthnicOther:QuestionList = new QuestionList("EthnicOther","Other Hispanic",ynr,1);
			public var qEthnicOtherSpecify:QuestionText = new QuestionText("EthnicOtherSpec","Other, specify","");
			
			public var qRaceWhite:QuestionList = new QuestionList("RaceWhite","White",ynr,1);
			public var qRaceBlack:QuestionList = new QuestionList("RaceBlack","Black or African American",ynr,1);
			public var qRaceAsianIndian:QuestionList = new QuestionList("RaceAsianIndian","Asian Indian",ynr,1);
			public var qRaceChinese:QuestionList = new QuestionList("RaceChinese","Chinese",ynr,1);
			public var qRaceFilipino:QuestionList = new QuestionList("RaceFilipino","Filipino",ynr,1);
			public var qRaceJapanese:QuestionList = new QuestionList("RaceJapanese","Japanese",ynr,1);
			public var qRaceKorean:QuestionList = new QuestionList("RaceKorean","Korean",ynr,1);
			public var qRaceVietnamese:QuestionList = new QuestionList("RaceVietnamese","Vietnamese",ynr,1);
			public var qRaceOtherAsian:QuestionList = new QuestionList("RaceOtherAsian","Other Asian",ynr,1);
			public var qRaceAmericanIndian:QuestionList = new QuestionList("RaceAmericanIndian","American Indian",ynr,1);
			public var qRaceAlaskaNative:QuestionList = new QuestionList("RaceAlaskaNative","Alaska Native",ynr,1);
			public var qRaceNativeHawaiian:QuestionList = new QuestionList("RaceNativeHawaiian","Native Hawaiian",ynr,1);
			public var qRaceGuamanian:QuestionList = new QuestionList("RaceGuamanian","Guamanian or Chamorro",ynr,1);
			public var qRaceSamoan:QuestionList = new QuestionList("RaceSamoan","Samoan",ynr,1);
			public var qRacePacificIslander:QuestionList = new QuestionList("RacePacificIslander","Other Pacific Islander",ynr,1);
			
			private var ethnicityQuestions:Array = new Array(qEthnicCentralAmerican, qEthnicCuban, qEthnicDominican, qEthnicMexican, qEthnicPuertoRican, qEthnicSouthAmerican, qEthnicOther);
			private var numEthnicSelected:int = 0;
			
			//Demographics Form Area
			public override function createForm():void
			{
				viewstackIndex = 4;
				
				//Questions
				createText("What is your month and year of birth?","h1");
				addQuestion(qBirthMonth);
				addQuestion(qBirthYear);
				qBirthMonth.input.width = 70;
				qBirthYear.input.width = 70;
				addDivider();
				
				addQuestion(qHispanicLatino);
				createText("What ethnic group do you consider yourself?","h1");
				var g:TileGroup = new TileGroup();
				g.requestedColumnCount = 2;
				g.requestedRowCount = 4;
				addElement(g);
				addGroupedQuestion(qEthnicCentralAmerican,g);
				addGroupedQuestion(qEthnicCuban,g);
				addGroupedQuestion(qEthnicDominican,g);
				addGroupedQuestion(qEthnicMexican,g);
				addGroupedQuestion(qEthnicPuertoRican,g);
				addGroupedQuestion(qEthnicSouthAmerican,g);
				addGroupedQuestion(qEthnicOther,g);
				addGroupedQuestion(qEthnicOtherSpecify,g);
				
				createText("What is your race?","h1");
				g = new TileGroup();
				g.requestedColumnCount = 2;
				g.requestedRowCount = 8;
				addElement(g);
				addGroupedQuestion(qRaceWhite,g);
				addGroupedQuestion(qRaceBlack,g);
				addGroupedQuestion(qRaceAsianIndian,g);
				addGroupedQuestion(qRaceChinese,g);
				addGroupedQuestion(qRaceFilipino,g);
				addGroupedQuestion(qRaceJapanese,g);
				addGroupedQuestion(qRaceKorean,g);
				addGroupedQuestion(qRaceVietnamese,g);
				addGroupedQuestion(qRaceOtherAsian,g);
				addGroupedQuestion(qRaceAmericanIndian,g);
				addGroupedQuestion(qRaceAlaskaNative,g);
				addGroupedQuestion(qRaceNativeHawaiian,g);
				addGroupedQuestion(qRaceGuamanian,g);
				addGroupedQuestion(qRaceSamoan,g);
				addGroupedQuestion(qRacePacificIslander,g);				
				
				//Validators
				Valid.addNumberValidator(qBirthMonth, 1, 12, true);
				Valid.addNumberValidator(qBirthYear, new Date().fullYear-100, new Date().fullYear-18, true);
				Valid.addDropDownValidator(qHispanicLatino,[NO_VALUE,REFUSED_VALUE]);
				Valid.addRequiredValidator(qEthnicOtherSpecify);
				qEthnicOtherSpecify.answerType = String;
				
				createEthnicBindings();
				
				//Control Logic
				addSkipDropDown(qHispanicLatino,[NO_VALUE,REFUSED_VALUE], ethnicityQuestions);
				(qHispanicLatino.skipPatterns[0] as SkipPattern).skipWhenInvalid = true;
				addSkipDropDown(qEthnicOther,[NO_VALUE,REFUSED_VALUE],[qEthnicOtherSpecify]);
			}
			
			private function addGroupedQuestion(q:QuestionClass, g:TileGroup):void
			{
				questions.push(q);
				g.addElement(q);
			}
			
			protected function hispanicHandler(val:String):void
			{
				var dv:DropDownValidator = qHispanicLatino.validator as DropDownValidator;
				for each (var q:QuestionClass in ethnicityQuestions)
					if(q.answer == YES_VALUE)
					{
						dv.validAnswers = [YES_VALUE];
						dv.validate();
						return;
					}

				dv.validAnswers = [NO_VALUE,REFUSED_VALUE];
				dv.validate();
			}
			
			private function createEthnicBindings():void
			{
				for each(var q:QuestionClass in ethnicityQuestions)
					BindingUtils.bindSetter(hispanicHandler, q.inputControl, "selectedIndex");
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
