<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.questions.QuestionTextRefusable;
			import components.validators.Valid;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qArrestedDays:QuestionTextRefusable = new QuestionTextRefusable("ArrestedDays","How many times have you been arrested?","0");
			public var qArrestedDrugDays:QuestionTextRefusable = new QuestionTextRefusable("ArrestedDrugDays","How many times have you been arrested for drug-related offenses?","0");
			public var qArrestedConfineDays:QuestionTextRefusable = new QuestionTextRefusable("ArrestedConfineDays","How many nights have you spent in jail/prison?","0");
			public var qNrCrimes:QuestionTextRefusable = new QuestionTextRefusable("NrCrimes","How many times have you committed a crime?","0");
			public var qAwaitTrial:QuestionList = new QuestionList("AwaitTrial","Are you currently awaiting charges, trial, or sentencing?",ynrdm,1);
			public var qParoleProbation:QuestionList = new QuestionList("ParoleProbation","Are you currently on parole/probation?",ynrdm,1);
			
			//Crime Form Area
			public override function createForm():void
			{
				//Questions
				createText("In the past 30 days...","h1");
				addQuestion(qArrestedDays,50);
				addQuestion(qArrestedDrugDays,50);
				addQuestion(qArrestedConfineDays,50);
				addQuestion(qNrCrimes,50);
				addDivider();
				addQuestion(qAwaitTrial);
				addQuestion(qParoleProbation);
				
				//Validators
				//qIncomeOther").inputControl.addEventListener(FocusEvent.FOCUS_OUT,incomeOtherHandler);
				
				Valid.addNumberValidator(qArrestedDays,0,99);
				Valid.addNumberValidator(qArrestedDrugDays,0,0);
				Valid.addNumberValidator(qArrestedConfineDays,0,15);
				Valid.addNumberValidator(qNrCrimes,0,999);
				BindingUtils.bindSetter(function():void{(qArrestedDrugDays.validator as NumberValidator).maxValue = Number(qArrestedDays.answer)}, qArrestedDays.inputControl, "text");
				BindingUtils.bindSetter(function():void{(qArrestedConfineDays.validator as NumberValidator).minValue = global.pageDCI.livingForm.qLivingWhere.getAnswerIndex() == 15 ? 16 : 0;
					(qArrestedConfineDays.validator as NumberValidator).maxValue = global.pageDCI.livingForm.qLivingWhere.getAnswerIndex() == 15 ? 30 : 15}, global.pageDCI.livingForm.qLivingWhere.inputControl, "selectedIndex");
				BindingUtils.bindSetter(function():void{(qNrCrimes.validator as NumberValidator).minValue = Number(global.pageDCI.drugForm.qIllegalDrugsDays.answer)}, global.pageDCI.drugForm.qIllegalDrugsDays.inputControl, "text");
				
				//Control Logic
				addSkipTextNumber(qArrestedDays,[qArrestedDrugDays],["0"]);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
