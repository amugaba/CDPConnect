<?xml version="1.0" encoding="utf-8"?>
<dci:DCIForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import components.QuestionList;
			import components.QuestionText;
			import components.QuestionTextRefusable;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qTrainingProgram:QuestionList = new QuestionList("TrainingProgram","Are you currently enrolled in school or a job training program?",new ArrayList(["No/Not Enrolled","Enrolled, Full Time","Enrolled, Part Time","Other","Refused","Don't Know","Missing Data"]),0);
			public var qTrainingProgramSpec:QuestionText = new QuestionText("TrainingProgramSpec","Other (specify)","");
			public var qEducationYears:QuestionList = new QuestionList("EducationYears","What is the highest level of education you have finished (whether or not you received a degree)?",new ArrayList(["Preschool","Kindergarten",
				"1st Grade","2nd Grade","3rd Grade","4th Grade","5th Grade","6th Grade","7th Grade","8th Grade","9th Grade","10th Grade","11th Grade","12th Grade/High School Diploma/Equivalent",
				"Some college or university","Bachelor's degree (BA, BS) or higher","Vocational/Technical diploma after high school","I never attended school or a job training program","Refused","Don't Know","Missing Data"]),0);
			
			public var qEmployStatus:QuestionList = new QuestionList("EmployStatus","Are you currently employed?",new ArrayList(["Employed Full Time (35+ hours per week, or would have been)","Employed Part Time","Unemployed, looking for work","Unemployed, disabled","Unemployed, volunteer work","Unemployed, retired","Unemployed, not looking for work","Other","Refused","Don't Know","Missing Data"]),0);
			public var qEmployStatusSpec:QuestionText = new QuestionText("EmployStatusSpec","Other (specify)","");
			public var qMinimumWage:QuestionList = new QuestionList("MinimumWage","Are you paid at or above the minimum wage?",ynrdm,0);
			public var qWagesPaidDirect:QuestionList = new QuestionList("WagesPaidDirect","Are your wages paid directly to you by your employer?",ynrdm,0);
			public var qJobAppliedAnyone:QuestionList = new QuestionList("JobAppliedAnyone","Could anyone have applied for your job?",ynrdm,0);

			public var qIncomeWages:QuestionTextRefusable = new QuestionTextRefusable("IncomeWages","Wages","0");
			public var qIncomePubAssist:QuestionTextRefusable = new QuestionTextRefusable("IncomePubAssist","Public assistance","0");
			public var qIncomeRetirement:QuestionTextRefusable = new QuestionTextRefusable("IncomeRetirement","Retirement","0");
			public var qIncomeDisability:QuestionTextRefusable = new QuestionTextRefusable("IncomeDisability","Disability","0");
			public var qIncomeNonLegal:QuestionTextRefusable = new QuestionTextRefusable("IncomeNonLegal","Non-legal income","0");
			public var qIncomeFamFriends:QuestionTextRefusable = new QuestionTextRefusable("IncomeFamFriends","Family and/or friends","0");
			public var qIncomeOther:QuestionTextRefusable = new QuestionTextRefusable("IncomeOther","Other","0");
			public var qIncomeOtherSpec:QuestionText = new QuestionText("IncomeOtherSpec","Other, specify","");
			
			//Employment Form Area
			public override function createForm():void
			{
				//Questions
				addQuestion(qTrainingProgram,140);
				addQuestion(qTrainingProgramSpec);
				addQuestion(qEducationYears,290);
				addQuestion(qEmployStatus,290);
				addQuestion(qEmployStatusSpec);
				addQuestion(qMinimumWage);
				addQuestion(qWagesPaidDirect);
				addQuestion(qJobAppliedAnyone);
				createText("Approximately, how much money did YOU receive (pre-tax individual income) in the past 30 days from...","h1");
				addQuestion(qIncomeWages,75);
				addQuestion(qIncomePubAssist,75);
				addQuestion(qIncomeRetirement,75);
				addQuestion(qIncomeDisability,75);
				addQuestion(qIncomeNonLegal,75);
				addQuestion(qIncomeFamFriends,75);
				addQuestion(qIncomeOther,75);
				addQuestion(qIncomeOtherSpec,75);
				
				//Validators
				addRequiredValidator(qTrainingProgramSpec);
				addRequiredValidator(qEmployStatusSpec);
				addNumberValidator(qIncomeWages,0,9999999);
				addNumberValidator(qIncomePubAssist,0,9999999);
				addNumberValidator(qIncomeRetirement,0,9999999);
				addNumberValidator(qIncomeDisability,0,9999999);
				addNumberValidator(qIncomeNonLegal,0,9999999);
				addNumberValidator(qIncomeFamFriends,0,9999999);
				addNumberValidator(qIncomeOther,0,9999999);
				addRequiredValidator(qIncomeOtherSpec);
				
				//Control Logic
				addSkipDropDown(qTrainingProgram,["Other"],[qTrainingProgramSpec],true);
				addSkipDropDown(qEmployStatus,["Employed Full Time (35+ hours per week, or would have been)","Employed Part Time","Other"],[qMinimumWage,qWagesPaidDirect,qJobAppliedAnyone],true);
				addSkipDropDown(qEmployStatus,["Other"],[qEmployStatusSpec],true);
				addSkipTextNumber(qIncomeOther,[qIncomeOtherSpec],["0"]);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</dci:DCIForm>
