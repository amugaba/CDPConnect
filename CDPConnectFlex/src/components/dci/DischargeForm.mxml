<?xml version="1.0" encoding="utf-8"?>
<assessment:InterviewForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:dci="components.dci.*" width="100%" height="100%"
			 labelWidth="305" xmlns:assessment="components.assessment.*">
	<fx:Script>
		<![CDATA[
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.questions.QuestionTextRefusable;
			import components.validators.DateAgeValidator;
			import components.validators.Valid;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayList;
			import mx.validators.NumberValidator;
			
			public var qDischargeDate:QuestionText = new QuestionText("DischargeDate","What is the date of discharge?");
			public var qLastServiceDate:QuestionText = new QuestionText("LastServiceDate","On what date did the client last receive servcies?");
			public var qDischargeStatus:QuestionList = new QuestionList("DischargeStatus","What is the clientâ€™s discharge status?",new ArrayList(["Mutually agreed cessation of treatment","Withdrew from/Declined treatment","No contact within 90 days of last encounter","Incarcerated","Clinically referred out","Death","Other"]),0);
			public var qDischargeSpec:QuestionText = new QuestionText("DischargeSpec","Other (specify)");
			
			private var testResponses:ArrayList = new ArrayList(["Negative/Non-reactive","Positive/reactive","Invalid/Indeterminate"]);
			public var qdHIVTest:QuestionList = new QuestionList("dHIVTest","Did the program test this client for HIV?",yn,1);
			public var qdHIVTestResult:QuestionList = new QuestionList("dHIVTestResult","What was the result?",testResponses,0);
			public var qdHIVTestRefer:QuestionList = new QuestionList("dHIVTestRefer","If the client was not tested for HIV, did the program refer this client for testing?",new ArrayList(["Yes","No","Client declined testing"]),1);
			public var qdHepTest:QuestionList = new QuestionList("dHepTest","Did the program test the client for Viral Hepatitis?",yn,1);
			public var qdHepBTestReceived:QuestionList = new QuestionList("dHepBTestReceived","Did the client receive the test results for Hepatitis B?",yn,1);
			public var qdHepBTestResult:QuestionList = new QuestionList("dHepBTestResult","What was the result?",testResponses,0);
			public var qdHepCTestReceived:QuestionList = new QuestionList("dHepCTestReceived","Did the client receive the test results for Hepatitis C?",yn,1);
			public var qdHepCTestResult:QuestionList = new QuestionList("dHepCTestResult","What was the result?",testResponses,0);
			public var qdHepTestConfirm:QuestionList = new QuestionList("dHepTestConfirm","Did the program conduct a Confirmatory Hepatitis Test?",yn,1);
			public var qdHepBConfirmReceived:QuestionList = new QuestionList("dHepBConfirmReceived","Did the client receive the confirmatory test results for Hepatitis B?",yn,1);
			public var qdHepBConfirmResult:QuestionList = new QuestionList("dHepBConfirmResult","What was the result?",testResponses,0);
			public var qdHepCConfirmReceived:QuestionList = new QuestionList("dHepCConfirmReceived","Did the client receive the confirmatory test results for Hepatitis C?",yn,1);
			public var qdHepCConfirmResult:QuestionList = new QuestionList("dHepCConfirmResult","What was the result?",testResponses,0);
			
			//Discharge Form Area
			public override function createForm():void
			{				
				//Questions
				addQuestion(qDischargeDate);
				qDischargeDate.defaultValue = global.dateFormatter.format(new Date());
				qDischargeDate.answer = qDischargeDate.defaultValue;
				addQuestion(qLastServiceDate);
				qLastServiceDate.defaultValue = global.dateFormatter.format(new Date());
				qLastServiceDate.answer = qLastServiceDate.defaultValue;
				addQuestion(qDischargeStatus,260);
				addQuestion(qDischargeSpec);
				addDivider();
				var resultWidth:int = 160;
				addQuestion(qdHIVTest);
				addQuestion(qdHIVTestResult,resultWidth);
				addQuestion(qdHIVTestRefer,resultWidth);
				addDivider();
				addQuestion(qdHepTest);
				addQuestion(qdHepBTestReceived);
				addQuestion(qdHepBTestResult,resultWidth);
				addQuestion(qdHepCTestReceived);
				addQuestion(qdHepCTestResult,resultWidth);
				addDivider();
				addQuestion(qdHepTestConfirm);
				addQuestion(qdHepBConfirmReceived);
				addQuestion(qdHepBConfirmResult,resultWidth);
				addQuestion(qdHepCConfirmReceived);
				addQuestion(qdHepCConfirmResult,resultWidth);;
				
				//Validators
				Valid.addDateAgeValidator(qDischargeDate,0,DateAgeValidator.DAY,1,DateAgeValidator.YEAR);
				Valid.addDateAgeValidator(qLastServiceDate,0,DateAgeValidator.DAY,3,DateAgeValidator.YEAR);
				Valid.addRequiredValidator(qDischargeSpec);
				qDischargeSpec.answerType = String;
				qDischargeDate.answerType = String;
				qLastServiceDate.answerType = String;
				
				//Control Logic
				addSkipDropDown(qDischargeStatus,["Other"],[qDischargeSpec],true);
				addSkipDropDown(qdHIVTest,["No"],[qdHIVTestResult]);
				addSkipDropDown(qdHIVTest,["Yes"],[qdHIVTestRefer]);
				addSkipDropDown(qdHepTest,["No"],[qdHepBTestReceived,qdHepCTestReceived,qdHepTestConfirm]);
				addSkipDropDown(qdHepBTestReceived,["No"],[qdHepBTestResult]);
				addSkipDropDown(qdHepCTestReceived,["No"],[qdHepCTestResult]);
				addSkipDropDown(qdHepTestConfirm,["No"],[qdHepBConfirmReceived,qdHepCConfirmReceived]);
				addSkipDropDown(qdHepBConfirmReceived,["No"],[qdHepBConfirmResult]);
				addSkipDropDown(qdHepCConfirmReceived,["No"],[qdHepCConfirmResult]);
			}
			
			public override function clearQuestionAnswers():void
			{
				qDischargeStatus.setAnswerIndex(-1);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</assessment:InterviewForm>
