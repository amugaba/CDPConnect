<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:custom="components.*"
					xmlns:gpraservice="services.gpraservice.*"
					xmlns:styles="com.adobe.fiber.styles.*"
					xmlns:clientservice="services.clientservice.*"
					width="715" height="600">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ArrayUtil;
			import mx.validators.NumberValidator;
			
			import valueObjects.ClientVO;
			
			[Bindable] protected var clientList:ArrayCollection = new ArrayCollection();
			[Bindable] protected var staffList:ArrayList = new ArrayList([""]);
			protected var global:CDPConnectFlex = FlexGlobals.topLevelApplication as CDPConnectFlex;
			
			public function creationCompleteHandler():void
			{
				staffList.addAll(global.userList);
			}
			
			protected function addClientButton_clickHandler(event:MouseEvent):void
			{
				global.activeClient = null;
				global.activeEpisode = null;
				global.activeAssessment = null;
				global.disableAllOtherButtons(global.pageClientButton);
				global.pageClient.initializePage();
				global.pageViewstack.selectedChild = global.pageClient;
			}
			
			public function loadButton_clickHandler():void
			{
				global.activeClient = clientGrid.selectedItem as ClientVO;
				global.activeEpisode = null;
				global.activeAssessment = null;
				global.pageClient.initializePage();
				global.pageViewstack.selectedChild = global.pageClient;
				global.enableLeftButtonsOnly(global.pageClientButton);
			}
			
			protected function sfSearchButton_clickHandler(event:MouseEvent):void
			{
				searchClientsResult.token = clientService.searchClients(sfClientID.text, sfFirstName.text, sfLastName.text, sfDOB.text, sfSSN.text);
			}
			
			protected function searchClientsResult_resultHandler(event:ResultEvent):void
			{
				if((searchClientsResult.lastResult as ArrayCollection).length != 0)
				{
					clientList = searchClientsResult.lastResult;
				}
				else
					Alert.show("No clients found.");
			}
			protected function getClientByIDResult_resultHandler(event:ResultEvent):void
			{
				if(getClientByIDResult.lastResult != null)
				{
					global.activeClient = getClientByIDResult.lastResult;
				}
				else
					Alert.show("No client found with this ID.","Client Not Loaded");
			}
			public function resetPage():void
			{
				sfClientID.text = "";
				sfFirstName.text = "";
				sfLastName.text = "";
				sfSSN.text = "";
				sfDOB.text = "";
				clientList = new ArrayCollection();
			}
		
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<clientservice:ClientService id="clientService"
									 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									 showBusyCursor="true"/>
		<s:CallResponder id="getClientByIDResult" result="getClientByIDResult_resultHandler(event)"/>
		<s:CallResponder id="searchClientsResult" result="searchClientsResult_resultHandler(event)"/>
	</fx:Declarations>
	<s:Form id="searchForm" x="91" y="5" width="280" height="160" defaultButton="{sfSearchButton}" fontWeight="bold">
		<s:layout>
			<s:VerticalLayout horizontalAlign="right"/>
		</s:layout>
		<mx:FormItem label="Client ID">
			<s:TextInput id="sfClientID" fontWeight="normal"/>
		</mx:FormItem>
		<mx:FormItem label="Last Name">
			<s:TextInput id="sfLastName" fontWeight="normal"/>
		</mx:FormItem>
		<mx:FormItem label="First Name">
			<s:TextInput id="sfFirstName" fontWeight="normal"/>
		</mx:FormItem>
		<mx:FormItem label="Date of Birth">
			<s:TextInput id="sfDOB" fontWeight="normal"/>
		</mx:FormItem>
		<mx:FormItem label="SSN">
			<s:TextInput id="sfSSN" fontWeight="normal"/>
		</mx:FormItem>
	</s:Form>
	<s:Button id="sfSearchButton" x="407" y="25" width="77" height="40" label="Search"
			  click="sfSearchButton_clickHandler(event)" fontWeight="normal"/>
	<s:Button id="addClientButton" x="395" y="100" height="38" label="Add New Client"
			  click="addClientButton_clickHandler(event)" fontWeight="normal"/>
	<s:DataGrid id="clientGrid" x="57" y="168" dataProvider="{clientList}"
				requestedRowCount="5" resizableColumns="false" width="590" height="400">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="clientid" headerText="ClientID" width="120"></s:GridColumn>
				<s:GridColumn dataField="lastname" headerText="Last Name" width="100"></s:GridColumn>
				<s:GridColumn dataField="firstname" headerText="First Name" width="100"></s:GridColumn>
				<s:GridColumn dataField="dob" headerText="DOB" width="80"></s:GridColumn>
				<s:GridColumn dataField="ssn" headerText="SSN" width="100"></s:GridColumn>
				<s:GridColumn dataField="load" headerText="Load" width="70">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer width="100%">
								<s:Button label="Load" x="7" y="3" width="55" click="{outerDocument.loadButton_clickHandler()}" />
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
		<s:typicalItem>
			<fx:Object clientid="00001" lastname="Smith" firstname="John" dob="11/11/1911" ssn="4444"></fx:Object>
		</s:typicalItem>
	</s:DataGrid>
</s:NavigatorContent>
