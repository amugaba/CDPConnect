<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:custom="components.*"
					xmlns:gpraservice="services.gpraservice.*"
					xmlns:styles="com.adobe.fiber.styles.*"
					xmlns:clientservice="services.clientservice.*"
					width="715" height="800" xmlns:questions="components.questions.*" xmlns:client="components.client.*">
	<fx:Script>
		<![CDATA[
			import components.dci.InterviewType;
			import components.questions.QuestionList;
			import components.questions.QuestionText;
			import components.validators.DateAgeValidator;
			import components.validators.Valid;
			
			import flash.globalization.DateTimeFormatter;
			import flash.globalization.LocaleID;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.Text;
			import mx.core.FlexGlobals;
			import mx.effects.effectClasses.AddRemoveEffectTargetFilter;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.ValidationResult;
			import mx.validators.Validator;
			
			import valueObjects.ClientVO;
			import valueObjects.GpraVO;
			
			protected var global:CDPConnectFlex = FlexGlobals.topLevelApplication as CDPConnectFlex;
			
			public function initializePage():void
			{
				clientGroup.initializeGroup();
				episodeGroup.initializeGroup();
				assessmentGroup.initializeGroup();
				if(global.activeClient == null)
					global.pageButtonBar.enabled = false;
			}		
			
			
			/*
			
			protected function loadGpraButton_clickHandler(event:MouseEvent):void
			{
				if(assessmentGrid.selectedIndex > -1)
				{
					global.activeGPRA = assessmentGrid.selectedItem as GpraVO;
					getGpraByIDResult.token = gpraService.getGpraByID(global.activeGPRA.autoid);
				}
			}
			protected function getGpraByIDResult_resultHandler(event:ResultEvent):void
			{
				if(getGpraByIDResult.lastResult != null)
				{
					//global.pageGPRA.initializeGPRA();
					global.activeGPRA.data = getGpraByIDResult.lastResult;
					//global.pageGPRA.populateForm(global.activeGPRA.data);
					global.pageViewstack.selectedChild = global.pageGPRA;
					global.pageGpraButton.enabled = true;
				}
				else
					Alert.show("GPRA not found with this ID.");
			}
			
			protected function createNegativeIntakeButton_clickHandler(event:MouseEvent):void
			{
				if(global.activeClient == null)
					Alert.show("Add or load a client first.");
				else if(global.activeClient.intake != null)
					Alert.show("A GPRA intake already exists.");
				else
				{
					var g:GpraVO = new GpraVO();
					g.autoid = -1;
					g.type = InterviewType.INTAKE_SBIRT_NEG;
					g.status = 0;
					g.clientid = global.activeClient.autoid;
					global.activeGPRA = g;
					//global.pageViewstack.selectedChild = global.pageGPRA;
					global.pageGpraButton.enabled = true;
					//global.pageGPRA.initializeGPRA();
				}	
			}
			
			protected function createBIIntakeButton_clickHandler(event:MouseEvent):void
			{
				if(global.activeClient == null)
					Alert.show("Add or load a client first.");
				//else if(global.activeClient.intake != null)
				//	Alert.show("A GPRA intake already exists.");
				else
				{
					var g:GpraVO = new GpraVO();
					g.autoid = -1;
					g.type = InterviewType.INTAKE_SBIRT_BI;
					g.status = 0;
					g.clientid = global.activeClient.autoid;
					global.activeGPRA = g;
					//global.pageViewstack.selectedChild = global.pageGPRA;
					global.pageGpraButton.enabled = true;
					//global.pageGPRA.initializeGPRA();
				}	
			}
			
			protected function getGpraSummaryByClientIDResult_resultHandler(event:ResultEvent):void
			{
				global.activeClient.gpras = getGpraSummaryByClientIDResult.lastResult;
				clientGPRAs = getGpraSummaryByClientIDResult.lastResult;
				
				global.activeClient.intake = null;
				global.activeClient.followup = null;
				global.activeClient.discharge = null;
				for each(var g:GpraVO in clientGPRAs)
				{
					if(g.type == 1)
					{
						global.activeClient.intake = g;
						getIntakeData.token = gpraService.getGpraByID(g.autoid);
					}
					else if(g.type == 2)
						global.activeClient.followup = g;
					else if(g.type == 5)
						global.activeClient.discharge = g;
				}
			}
			
			protected function createDischargeButton_clickHandler(event:MouseEvent):void
			{
				if(global.activeClient == null)
					Alert.show("Add or load a client first.");
				else if(global.activeClient.intake == null)
					Alert.show("Create a GPRA intake first.");
				else if(global.activeClient.discharge != null)
					Alert.show("A GPRA discharge already exists.");
				else
				{
					var g:GpraVO = new GpraVO();
					g.autoid = -1;
					g.type = 5;
					g.status = 0;
					g.clientid = global.activeClient.autoid;
					global.activeGPRA = g;
					//global.pageViewstack.selectedChild = global.pageGPRA;
					global.pageGpraButton.enabled = true;
					//global.pageGPRA.initializeGPRA();
				}	
			}
			
			protected function createFollowupButton_clickHandler(event:MouseEvent):void
			{
				if(global.activeClient == null)
					Alert.show("Add or load a client first.");
				else if(global.activeClient.intake == null)
					Alert.show("Create a GPRA intake first.");
				else if(global.activeClient.followup != null)
					Alert.show("A GPRA followup already exists.");
				else
				{
					var g:GpraVO = new GpraVO();
					g.autoid = -1;
					g.type = 2;
					g.status = 0;
					g.clientid = global.activeClient.autoid;
					global.activeGPRA = g;
					//global.pageViewstack.selectedChild = global.pageGPRA;
					global.pageGpraButton.enabled = true;
					//global.pageGPRA.initializeGPRA();
				}
			}
			*/
			protected function getIntakeData_resultHandler(event:ResultEvent):void
			{
				global.activeClient.intake.data = getIntakeData.lastResult;
			}
			
		]]>
	</fx:Script>
	<fx:Style> 
		@namespace s "library://ns.adobe.com/flex/spark"; 
		@namespace mx "library://ns.adobe.com/flex/mx"; 
		@namespace components "components.*"; 

	</fx:Style>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!--<s:CallResponder id="getGpraByIDResult" result="getGpraByIDResult_resultHandler(event)"/>
		<s:CallResponder id="getGpraSummaryByClientIDResult" result="getGpraSummaryByClientIDResult_resultHandler(event)"/>-->
		<s:CallResponder id="getIntakeData" result="getIntakeData_resultHandler(event)"/>
		<gpraservice:GpraService id="gpraService"
								 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								 showBusyCursor="true"/>

		
	</fx:Declarations>
	<client:ClientGroup id="clientGroup" x="0" y="0" />
	<mx:HRule x="10" y="223" width="695" height="20"/>
	<client:EpisodeGroup id="episodeGroup" x="0" y="233" />
	<mx:HRule x="10" y="462" width="695" height="20"/>
	<client:AssessmentGroup id="assessmentGroup" x="0" y="471"/>
</s:NavigatorContent>
